___Spring boot & Angular___

Para utilizar o Angular, vamos precisar da engine do Node.js, que através do npm nós conseguiremos gerenciar os pacotes.
O npm é simular ao Maven do java. Irá instalar os pacotes e gerenciar as dependências.

Com o node instalado, vamos instalar o Angular CLI(ferramenta de terminal do Angular que permite a criação e build de projetos).

Para instalar:
1. Abre o CMD
2. Verifica a versão do node(node -v)
3. Globalmente, digita npm install -g(indica que é global) @angular/cli(ferramenta do cli do Angular)
4. Verifica a versão(ng version)
5. Cria o diretório(chamarei de crud-angular-spring)
 Dentro desse diretório, criaremos dois projetos, um para o Angular e outro para o Spring --estarão separados e na hora do build em produção, juntaremos(ou fazemos o build separados, dependerá de como queremos fazer).

Abre a pasta crud-angular-spring no cmd
ng new crud-angular(e na parte do spring, crud-spring)
Ele irá perguntar se queremos utilizar o roteamento --> Y
Além do estilo de css que iremos utilizar

Irá criar as pastas com suas devidas configurações

As dependências do Angular estão no arquivo package.json

Para desenvolver, só precisamos das dependências:
	Angular cli;
	Jasmine(bilbioteca de teste);
	Karma(também é uma biblioteca de teste);
	Typescript

As configurações do TypeScript está no arquivo tsconfig

O arquivo de configuração do Karma é o karma.conf.js

O arquivo de configurações do projeto é o Angular.json

Aula02: Overview do Projeto e instalando o Angular Material:
https://www.youtube.com/watch?v=PqVuSKCk_OU&list=PLGxZ4Rq3BOBpwaVgAPxTxhdX_TfSVlTcY&index=2

Arquivo principal: **app/app.component.ts**

Para configurar os modules utilizamos roteamento no arquivo app-routing.module.ts

Comando para executar o projeto: ng serve
geralmente a diretriz é http://localhost:4200/

A parte do html e css para renderizar a página é no arquivo app/app.component.html

Agora vamos instalar o Angular Material: 
	https://material.angular.io/guide/getting-started

Podemos instalar via npm install, que irá instalar diretamente no package.json
Ou pelo comando: ng add @angular/material(adiciona as configurações para a gente automaticamente)

__Criando uma Toolbar na Página Principal__
Vamos adicionar um componente toolbar

Página de componentes: https://material.angular.io/components/categories

Antes de inserir o HTML, precisamos adicionar o Módulo(API), sem o import do módulo, não tem como ele reconhecer o que 
é a tag <mat-toolbar>(diretiva do Angular)

Copia o import:  import {MatToolbarModule} from '@angular/material/toolbar'; 

Insere no arquivo app.module.ts

Copia o nome do módulo e insere em imports: [ MatToolbarModule ]

__Criando o Módulo de Cursos e Usando Roteamento com Lazy Loading__

Usando roteamento para renderizar a lista de cursos da nossa aplicação:

Organizaremos as páginas por módulos para ficar fácil a manutenção.
Para isso, utilizaremos o comando com a rota: ng g(generate) module nome_modulo --routing
		    Simplificando: ng g m courses --routing

Será criado um diretório de cursos: app/courses com um módulo courses.module.ts e o roteamento

No Angular, todos os componentes que geramos e utilizamos apenas naquele módulo, ele ficará visível apenas naquele módulo, caso queiramos usar em outro módulo, precisamos fazer o import dele.

Criaremos um componente dentro do módulo de cursos:
Comando:       
      
ng generate component [diretorio]/[name]

ou 

ng generate component [name]

Simplificando: ng g c [name]

Será criado o HTML, css, o arquivo de testes e o componente ts.


CRIANDO UMA INTERFACE DE CURSO
Model: Interface para representar um tipo de dados.
ng g interface courses/model/course

no typescript a classe da interface existe apenas em tempo de desenvolvimento.
	
GERANDO UM SERVIÇO
ng g s courses/services/courses

